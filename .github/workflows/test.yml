name: Run tests
on:
  push
jobs:

  tests:

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
    runs-on: ${{ matrix.os }}

    steps:

      - name: fetch code
        uses: actions/checkout@v3

      - name: get nox
        uses: excitedleigh/setup-nox@v2.1.0

      - name: run ward tests in nox environment
        run: nox -s test test_without_toml --force-color
        env:
          PYTHONIOENCODING: utf-8

      - name: upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:

    runs-on: ubuntu-22.04
    needs: tests

    steps:

      - name: fetch code
        uses: actions/checkout@v3

      - name: get nox
        uses: excitedleigh/setup-nox@v2.1.0

      - name: get coverage data from recent tests
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: combine and judge coverage data
        run: nox -s low_coverage --force-color

      - name: upload HTML report if coverage is low
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}

      - name: extract coverage rating for badge
        run: |
          COV_PERCENT="$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")"
          printf '%s\n' "COV_PERCENT=$COV_PERCENT" >>"$GITHUB_ENV"

      - name: make badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: a4994f49b7d543e25bc29b07d2309a5f
          filename: covbadge.json
          label: Coverage
          message: ${{ env.COV_PERCENT }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.COV_PERCENT }}
